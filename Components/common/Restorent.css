.btn {
    @apply inline-block h-auto w-auto min-h-0 cursor-pointer overflow-hidden rounded bg-primary;
    border-width: 0;
    padding: 0.625rem 1.25rem;
    text-align: center;
    vertical-align: middle;
    font-size: 14px;
    line-height: 1.8;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    --tw-text-opacity: 1;
    color: rgb(15 23 42 / var(--tw-text-opacity));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.5s;
  }
  
  .btn,
  .btn > * {
    position: relative;
  }
  
  .btn > * {
    z-index: 10;
    color: inherit;
    transition-property: none;
  }
  
  .btn:active {
    transition-property: color, background-color, border-color, fill, stroke,
      opacity, box-shadow, transform, filter, -webkit-text-decoration-color,
      -webkit-backdrop-filter;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
      backdrop-filter;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
      backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.5s;
  }
  
  .btn:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
    height: 100%;
    width: 100%;
    transform-origin: bottom;
    --tw-scale-y: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.5s;
  }
  
  .btn:hover:after {
    transform-origin: top;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  .card {
    @apply rounded-lg border bg-gray-700 backdrop-blur-md;
  }
  
  .hovercard {
    transition-property: color, background-color, border-color, fill, stroke,
      opacity, box-shadow, transform, filter, -webkit-text-decoration-color,
      -webkit-backdrop-filter;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
      backdrop-filter;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
      backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.5s;
  }
  
  .hovercard:hover {
    --tw-translate-y: -0.375rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }